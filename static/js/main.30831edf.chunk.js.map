{"version":3,"sources":["WebsocketManager.jsx","LEDController/LedController.jsx","LEDController/Slider.jsx","LEDController/Fader.jsx","LEDController/LedManager.jsx","PowerButtons.jsx","DHT11.jsx","ConnectionManager.jsx","index.jsx"],"names":["EventType","DATA","SOCKET_STATUS","WebsocketManager","this","websocket","data_callbacks","Set","status_callbacks","buffer","sendBuffer","bufferedPacket","shift","undefined","data","Uint8Array","send","setTimeout","wait","status","console","log","cb","event","url","close","WebSocket","binaryType","onopen","ev","notifyOnStatus","onclose","onmessage","notifyOnData","isActive","readyState","OPEN","packet","push","event_type","callback","callbacks","getCallbackList","add","delete","LedController","props","dataListener","bind","statusListener","map","value","listen","state","leds","getInfo","unlisten","length","command_type","onInfo","total_leds","i","setState","warn","changes","newValue","React","Component","Slider","index","target","className","type","min","max","step","onChange","onLedChange","rows","cols","col","key","createSlider","Direction","Controllers","fadeValues","fadeDirection","interval","setInterval","updateLeds","direction","rate","clearInterval","Number","onFadeChange","values","LedManager","controllers","controller","Controller","Object","keys","onClick","setController","data-toggle","aria-labelledby","renderControllers","renderHeader","getControllerComponent","PowerButtons","isPowered","command","turnOff","turnOn","reset","role","renderPowerButton","renderResetButton","temperatureMapping","DHT11","temperature","humidity","icon","text","background","fontSize","barSize","width","fontStyle","barStyle","height","style","Math","round","renderBar","renderTemperature","renderHumidity","ConnectionManager","setStatus","isConnected","open","onURLChange","onKeyDown","aria-label","renderControls","renderURL","Main","ReactDOM","render","document","getElementById"],"mappings":"+NAAMA,EAAY,CACdC,KAAM,EACNC,cAAe,GAGEC,E,WACjB,aAAe,oBACXC,KAAKC,UAAY,KACjBD,KAAKE,eAAiB,IAAIC,IAC1BH,KAAKI,iBAAmB,IAAID,IAC5BH,KAAKJ,UAAYA,EAEjBI,KAAKK,OAAS,GACdL,KAAKM,a,yDAGK,IAAD,OACLC,EAAiBP,KAAKK,OAAOG,QACjC,QAAuBC,IAAnBF,EAAJ,CAIA,IAAIG,EAAOH,EAAeG,KACtBL,EAAS,IAAIM,WAAWD,GAC5BV,KAAKC,UAAUW,KAAKP,GACpBQ,YAAW,kBAAM,EAAKP,eAAcC,EAAeO,WAN/CD,YAAW,kBAAM,EAAKP,eAAc,M,qCAS7BS,GACXC,QAAQC,IAAI,qBAAuBF,GADhB,2BAEnB,YAAef,KAAKI,iBAApB,+CAAsC,EAClCc,EADkC,SAC/BH,IAHY,qF,mCAOVI,GACT,IAAId,EAASc,EAAMT,KACfA,EAAO,IAAIC,WAAWN,GAC1BW,QAAQC,IAAI,aAAeP,GAHX,2BAIhB,YAAeV,KAAKE,eAApB,+CAAoC,CAChC,IAAIgB,EAD4B,SACzBR,GACH,OANQ,qF,2BAWfU,GAAM,IAAD,OACNpB,KAAKqB,QACLL,QAAQC,IAAI,uBAAyBG,GACrCpB,KAAKC,UAAY,IAAIqB,UAAUF,GAC/BpB,KAAKC,UAAUsB,WAAa,cAC5BvB,KAAKC,UAAUuB,OAAS,SAACC,GAAD,OAAQ,EAAKC,gBAAe,IACpD1B,KAAKC,UAAU0B,QAAU,SAACF,GAAD,OAAQ,EAAKC,gBAAe,IACrD1B,KAAKC,UAAU2B,UAAY,SAACH,GAAD,OAAQ,EAAKI,aAAaJ,M,8BAIjDzB,KAAK8B,YACL9B,KAAKC,UAAUoB,QAEnBrB,KAAKC,UAAY,O,iCAIjB,OAAuB,OAAnBD,KAAKC,WAGLD,KAAKC,UAAU8B,aAAeT,UAAUU,O,2BAM3CtB,GAAgB,IAAVI,EAAS,uDAAJ,GACZ,GAAId,KAAK8B,WAAY,CACjB,IAAIG,EAAS,CACTvB,KAAMA,EACNI,KAAMA,GAGV,OADAd,KAAKK,OAAO6B,KAAKD,IACV,EAEX,OAAO,I,sCAGKE,GACZ,OAAQA,GACR,KAAKpC,EAAiBH,UAAUC,KAC5B,OAAOG,KAAKE,eAChB,KAAKH,EAAiBH,UAAUE,cAC5B,OAAOE,KAAKI,iBAChB,QACI,U,6BAIDgC,EAAUD,GACb,IAAIE,EAAYrC,KAAKsC,gBAAgBH,GAIrC,YAHkB1B,IAAd4B,GACAA,EAAUE,IAAIH,GAEXpC,O,+BAGFoC,EAAUD,GACf,IAAIE,EAAYrC,KAAKsC,gBAAgBH,GACrC,YAAkB1B,IAAd4B,GACOA,EAAUG,OAAOJ,M,iCAM5B,OAAOxC,M,0BC5GM6C,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDL,UAAY,CACb,CAAC,EAAKM,aAAaC,KAAlB,gBAA8B7C,EAAiBH,UAAUC,MAC1D,CAAC,EAAKgD,eAAeD,KAApB,gBAAgC7C,EAAiBH,UAAUE,gBAGhE,EAAKuC,UAAUS,KAAI,SAACC,GAChB,EAAKL,MAAMzC,UAAU+C,OAAOD,EAAM,GAAIA,EAAM,OAGhD,EAAKE,MAAQ,CACTC,KAAM,IAGN,EAAKR,MAAMzC,UAAU6B,YACrB,EAAKqB,UAhBM,E,oFAoBK,IAAD,OACnBnD,KAAKqC,UAAUS,KAAI,SAACC,GAChB,EAAKL,MAAMzC,UAAUmD,SAASL,EAAM,GAAIA,EAAM,S,mCAIzCrC,GACT,KAAIA,EAAK2C,OAAS,GAAiB,IAAZ3C,EAAK,IAA5B,CAIAM,QAAQC,IAAI,gBAEZ,IAAIqC,EAAe5C,EAAK,GAOxB,OANqB,IAAjB4C,GAAyB5C,EAAK2C,QAAU,GACxCrD,KAAKuD,OAAO7C,IAKT,K,qCAyBIK,GACPA,GACAf,KAAKmD,Y,6BAKNzC,GACH,IAAI8C,EAAa9C,EAAK,GACtB,GAAI8C,IAAe9C,EAAK2C,OAAO,EAA/B,CAMA,IADA,IAAIH,EAAO,GACFO,EAAI,EAAGA,EAAID,EAAYC,IAC5BP,EAAKhB,KAAKxB,EAAK+C,EAAE,IAErBzD,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BC,KAAMA,UARhClC,QAAQ2C,KAAK,wD,gCAYjB3D,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,EAAM,M,yBA5C5BsC,GAEL,IADA,IAAIU,EAAU,GACLH,EAAI,EAAGA,EAAIP,EAAKG,OAAQI,IAAK,CAClC,IAAII,EAAqB,IAAVX,EAAKO,GAEhBI,KADgC,IAArB7D,KAAKiD,MAAMC,KAAKO,MAE3BG,EAAQ1B,KAAKuB,GACbG,EAAQ1B,KAAK2B,IAGrB,GAAuB,IAAnBD,EAAQP,OAAZ,CAGA,IAAIpB,EAAM,CAAI,EAAM,GAAV,OAAmB2B,GAC7B5D,KAAK0C,MAAMzC,UAAUW,KAAKqB,GAC1BjC,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BC,KAAMA,O,eAIpC,OAAOlD,KAAKiD,MAAMC,S,GA/DiBY,IAAMC,WCA5BC,E,YACjB,WAAYtB,GAAQ,qEACVA,I,yEAGEuB,EAAO9C,GACf,IAAI4B,EAAQ5B,EAAM+C,OAAOnB,MACrBG,EAAI,YAAOlD,KAAKkD,MACpBA,EAAKe,GAASlB,EACd/C,KAAKkD,KAAOA,I,mCAGHH,EAAOkB,GAAQ,IAAD,OACxB,OAAO,wBAAIE,UAAU,qEAChB,2BAAQA,UAAU,yBAAyBC,KAAK,QACxCC,IAAI,IAAIC,IAAI,MAAMC,KAAK,IACvBxB,MAAOA,EACPyB,SAAU,SAAC/C,GAAD,OAAQ,EAAKgD,YAAYR,EAAOxC,MAClD,0BAAM0C,UAAU,kCAAkCpB,M,+BAOtD,IAFA,IACI2B,EAAO,GACFjB,EAAI,EAAGzD,KAAKkD,MAAQO,EAAIzD,KAAKkD,KAAKG,OAAQI,GAF9B,EAEiD,CAElE,IADA,IAAIkB,EAAO,GACFC,EAAM,EAAGA,EAJD,EAIqBA,IAAO,CACzC,IAAIX,EAAQR,EAAEmB,EACd,GAAIX,EAAQjE,KAAKkD,KAAKG,OAAQ,CAC1B,IAAIN,EAAQ/C,KAAKkD,KAAKe,GACtBU,EAAKzC,KAAK,yBAAKiC,UAAU,MAAMU,IAAKZ,GAAQjE,KAAK8E,aAAa/B,EAAOkB,MAG7ES,EAAKxC,KAAK,yBAAKiC,UAAU,MAAMU,IAAKH,EAAKrB,QAASsB,IAEtD,OAAO,yBAAKR,UAAU,mBAAmBO,O,GApCbjC,G,QCA9BsC,EACO,EADPA,EAEM,ECCNC,EAAc,CAChB,OAAUhB,EACV,M,YDCA,WAAYtB,GAAQ,IAAD,8BACf,4CAAMA,KACDO,MAAQ,CACTgC,WAAY,GACZC,cAAe,IAJJ,E,iFAQE,IAAD,OAChBlF,KAAKmF,SAAWC,aAAY,kBAAM,EAAKC,eAAc,M,mCAIrD,QAAkB5E,IAAdT,KAAKkD,KAAT,CAIA,IADA,IAAIA,EAAI,YAAOlD,KAAKkD,MACXO,EAAI,EAAGA,EAAIP,EAAKG,OAAQI,IAAK,CAClC,IAAI6B,EAAYtF,KAAKiD,MAAMiC,cAAczB,GACrC8B,EAAOvF,KAAKiD,MAAMgC,WAAWxB,GACjC,OAAQ6B,GACR,KAAKP,EACD7B,EAAKO,IAAM8B,EACPrC,EAAKO,IAAM,MACXP,EAAKO,GAAK,IACVzD,KAAKiD,MAAMiC,cAAczB,GAAKsB,GAElC,MACJ,KAAKA,EACD7B,EAAKO,IAAM8B,EACPrC,EAAKO,IAAM,IACXP,EAAKO,GAAK,EACVzD,KAAKiD,MAAMiC,cAAczB,GAAKsB,IAK1C/E,KAAKkD,KAAOA,K,6BAGTxC,GAEH,GADA,8DAAaA,GACTV,KAAKkD,KAAKG,SAAWrD,KAAKiD,MAAMgC,WAAW5B,OAA/C,CAGA,IAAI4B,EAAajF,KAAKkD,KAAKJ,KAAI,kBAAM,KACjCoC,EAAgBlF,KAAKkD,KAAKJ,KAAI,kBAAMiC,KACxC/E,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BgC,WAAYA,EAAYC,cAAeA,Q,6CAIrE,6EACAM,cAAcxF,KAAKmF,Y,mCAGVlB,EAAO9C,GAChB,IAAI4B,EAAQ0C,OAAOtE,EAAM+C,OAAOnB,OAC5BkC,EAAU,YAAOjF,KAAKiD,MAAMgC,YAChCA,EAAWhB,GAASlB,EACpB/C,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BgC,WAAYA,O,mCAGjClC,EAAOkB,GAAQ,IAAD,OACxB,OAAO,wBAAIE,UAAU,qEAChB,2BAAQA,UAAU,yBAAyBC,KAAK,QACxCC,IAAI,IAAIC,IAAI,KAAKC,KAAK,IACtBxB,MAAOA,EACPyB,SAAU,SAAC/C,GAAD,OAAQ,EAAKiE,aAAazB,EAAOxC,MACnD,0BAAM0C,UAAU,kCAAkCpB,M,+BAQtD,IAHA,IACI2B,EAAO,GACPiB,EAAS3F,KAAKiD,MAAMgC,WACfxB,EAAI,EAAGA,EAAIkC,EAAOtC,OAAQI,GAHhB,EAGmC,CAElD,IADA,IAAIkB,EAAO,GACFC,EAAM,EAAGA,EALH,EAKuBA,IAAO,CACzC,IAAIX,EAAQR,EAAImB,EAChB,GAAIX,EAAQ0B,EAAOtC,OAAQ,CACvB,IAAIN,EAAQ4C,EAAO1B,GACnBU,EAAKzC,KAAK,yBAAKiC,UAAU,MAAMU,IAAKZ,GAAQjE,KAAK8E,aAAa/B,EAAOkB,MAG7ES,EAAKxC,KAAK,yBAAKiC,UAAU,MAAMU,IAAKH,EAAKrB,QAASsB,IAEtD,OAAO,yBAAKR,UAAU,mBAAmBO,O,GAxFdjC,ICGdmD,E,YACjB,WAAYlD,GAAQ,IAAD,8BACf,4CAAMA,KACDmD,YAAcb,EACnB,EAAK/B,MAAQ,CACTC,KAAM,GACN4C,WAAY,UALD,E,2EASLA,GACV9F,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8B6C,WAAYA,O,6CAGvBpD,GACnB,IAAIqD,EAAaf,EAAYhF,KAAKiD,MAAM6C,YACxC,OAAO,kBAACC,EAAerD,K,0CAGN,IAAD,OAChB,OAAOsD,OAAOC,KAAKjG,KAAK6F,aAAa/C,KAAI,SAACC,EAAOkB,GAC7C,OAAO,uBAAGY,IAAKZ,EAAOE,UAAU,gBAAgB+B,QAAS,kBAAM,EAAKC,cAAcpD,KAASA,Q,qCAK/F,OACA,yBAAKoB,UAAU,uGACX,4CACA,yBAAKA,UAAU,qCACX,4BAAQA,UAAU,mDAAmDiC,cAAY,YAAYpG,KAAKiD,MAAM6C,YACxG,yBAAK3B,UAAU,gBAAgBkC,kBAAgB,oBAC1CrG,KAAKsG,yB,+BAQlB,OACA,6BACKtG,KAAKuG,eACLvG,KAAKwG,uBAAuB,CACzBvG,UAAWD,KAAK0C,MAAMzC,iB,GA5CE6D,IAAMC,WCTzB0C,E,YACjB,WAAY/D,GAAQ,IAAD,8BACf,4CAAMA,KACDA,MAAMzC,UAAU+C,OAAO,EAAKL,aAAaC,KAAlB,gBAA8B7C,EAAiBH,UAAUC,MACrF,EAAK6C,MAAMzC,UAAU+C,OAAO,EAAKG,QAAQP,KAAb,gBAAyB7C,EAAiBH,UAAUE,eAChF,EAAKmD,MAAQ,CACTyD,WAAW,GALA,E,sEAUf1G,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,EAAM,M,gCAIjCZ,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,EAAM,M,8BAIjCZ,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,EAAM,M,mCAGxBF,GACT,KAAIA,EAAK2C,OAAS,GAAiB,IAAZ3C,EAAK,IAI5B,OADAV,KAAKuD,OAAO7C,IACL,I,6BAGJA,GACH,IAAIiG,EAAUjG,EAAK,GACfuC,EAAQvC,EAAK,GACjB,OAAQiG,GACR,KAAK,EACD3G,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8ByD,UAAYzD,EAAQ,KAClD,MACJ,QACIjC,QAAQ2C,KAAK,4BAA8BgD,M,8BAK3C5F,GACAA,GACAf,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,EAAM,M,0CAIpB,IAAD,OACZwB,EAAWpC,KAAKiD,MAAMyD,UAAa,kBAAM,EAAKE,WAAc,kBAAM,EAAKC,UACvE1C,EAAYnE,KAAKiD,MAAMyD,UAAY,aAAe,cACtD,OACA,4BAAQtC,KAAK,SAASD,UAAW,OAAOA,EAAW+B,QAAS9D,GACxD,uBAAG+B,UAAU,uB,0CAIA,IAAD,OAChB,OACA,4BAAQC,KAAK,SAASD,UAAU,kBAAkB+B,QAAS,kBAAM,EAAKY,UAClE,uBAAG3C,UAAU,kB,+BAKjB,OACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,YAAY4C,KAAK,SAC3B/G,KAAKgH,oBACLhH,KAAKiH,0B,GAtEoBnD,IAAMC,WCA1CmD,EAAqB,CACvB,kBACA,sBACA,mBACA,6BACA,oBAGiBC,E,YACjB,WAAYzE,GAAQ,IAAD,8BACf,4CAAMA,KACDA,MAAMzC,UAAU+C,OAAO,EAAKL,aAAaC,KAAlB,gBAA8B7C,EAAiBH,UAAUC,MACrF,EAAK6C,MAAMzC,UAAU+C,QAAO,SAACjC,GACrBA,GAAQ,EAAKoC,YAClBpD,EAAiBH,UAAUE,eAE9B,EAAKmD,MAAQ,CACTmE,YAAa,EACbC,SAAU,GATC,E,0EAaN3G,GACT,KAAIA,EAAK2C,OAAS,GAAiB,IAAZ3C,EAAK,IAI5B,OADAV,KAAKuD,OAAO7C,IACL,I,6BAGJA,GACH,IAAI2G,EAAW3G,EAAK,GAChB0G,EAAc1G,EAAK,GACvBV,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BoE,SAAUA,EAAUD,YAAaA,O,gCAI/DpH,KAAK0C,MAAMzC,UAAUW,KAAK,CAAC,GAAO,O,gCAG5B0G,EAAMC,EAAMC,EAAYC,EAAUC,EAASC,GACjD,IAAIC,EAAY,CAACH,SAAUA,EAAS,MAChCI,EAAW,CAACC,OAAQJ,EAAQ,MAEhC,OACA,yBAAKvD,UAAU,WAAW4D,MAAOF,GAC7B,yBAAK1D,UAAW,gBAAgBqD,EAAYT,KAAK,cAAcgB,MAAO,CAACJ,MAAOA,EAAM,MAChF,yBAAKxD,UAAU,6DACX,uBAAGA,UAAW,SAASmD,EAAMS,MAAOH,IACpC,yBAAKzD,UAAU,YAAY4D,MAAOH,GAAYL,Q,0CAO1D,IAAII,EAAQ3H,KAAKiD,MAAMmE,YAAc,GAAK,IAItCnD,GAASjE,KAAKiD,MAAMmE,YAAY,IAAI,GACxCnD,EAAQ+D,KAAKC,MAAMhE,GACnBA,EAAQ+D,KAAK3D,IAAIJ,EAAOiD,EAAmB7D,OAAO,GAClDY,EAAQ+D,KAAK1D,IAAIL,EAAO,GACxB,IAAIqD,EAAOJ,EAAmBjD,GAI1BsD,EAAOvH,KAAKiD,MAAMmE,YAAY,QAElC,OAAOpH,KAAKkI,UAAUZ,EAAMC,EAAM,YAJnB,IACDE,IAGoDE,K,uCAIlE,IAAIA,EAAQ3H,KAAKiD,MAAMoE,SAInBE,EAAOvH,KAAKiD,MAAMoE,SAAS,IAE/B,OAAOrH,KAAKkI,UALD,OAKiBX,EAAM,aAJnB,IACDE,IAGqDE,K,+BAG7D,IAAD,OACL,OAAO,6BACH,yBAAKxD,UAAU,4GACX,qCACA,4BAAQA,UAAU,mCAAmC+B,QAAS,kBAAM,EAAK/C,YAAzE,YAEJ,yBAAKgB,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OAAOnE,KAAKmI,qBAC3B,yBAAKhE,UAAU,OAAOnE,KAAKoI,yB,GApFZtE,IAAMC,WCPpBsE,E,YACjB,WAAY3F,GAAQ,IAAD,8BACf,4CAAMA,KACDA,MAAMzC,UAAU+C,OAAO,EAAKsF,UAAU1F,KAAf,gBAA2B7C,EAAiBH,UAAUE,eAClF,EAAKmD,MAAQ,CACTsF,aAAa,EACbnH,IAAK,qCAGTP,YAAW,kBAAM,EAAK2H,SAAQ,GARf,E,oEAYfxI,KAAK0C,MAAMzC,UAAUuI,KAAK,QAAQxI,KAAKiD,MAAM7B,O,8BAI7CpB,KAAK0C,MAAMzC,UAAUoB,U,gCAGfN,GACNf,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8BsF,YAAaxH,O,kCAGnCI,GACR,IAAIC,EAAMD,EAAM+C,OAAOnB,MACvB/C,KAAK0D,SAAL,eAAkB1D,KAAKiD,MAAvB,CAA8B7B,IAAKA,O,kCAG1B,IAAD,OACR,OACA,yBAAK+C,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,UAEJ,2BAAOA,UAAU,kCACbpB,MAAO/C,KAAKiD,MAAM7B,IAClBoD,SAAUxE,KAAKyI,YAAY7F,KAAK5C,MAChC0I,UAAW,SAACjH,GACO,UAAXA,EAAGoD,KACH,EAAK2D,QAGbpE,KAAK,OAAOuE,aAAW,QAC1B3I,KAAK4I,oB,uCAII,IAAD,OACTzE,EAAYnE,KAAKiD,MAAMsF,YAAc,aAAe,cACpDnG,EAAYpC,KAAKiD,MAAMsF,YAAc,kBAAM,EAAKlH,SAAU,kBAAM,EAAKmH,QACrElB,EAAOtH,KAAKiD,MAAMsF,YAAc,eAAiB,aACrD,OACA,yBAAKpE,UAAU,sBACX,4BAAQC,KAAK,SAASD,UAAW,OAAOA,EAAW+B,QAAS9D,GACxD,uBAAG+B,UAAWmD,Q,+BAMtB,OACA,yBAAKnD,UAAU,wBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACVnE,KAAK6I,mB,GAjEqB/E,IAAMC,WCI/C+E,E,YACF,WAAYpG,GAAQ,IAAD,8BACf,4CAAMA,KACDzC,UAAY,IAAIF,EAFN,E,sEAMf,OAAO,8BACH,yBAAKoE,UAAU,yCACX,yBAAKA,UAAU,4BACX,kBAAC,EAAD,CAAclE,UAAWD,KAAKC,YAC9B,kBAAC,EAAD,CAAmBA,UAAWD,KAAKC,cAG3C,yBAAKkE,UAAU,kBACX,kBAAC,EAAD,CAAYlE,UAAWD,KAAKC,YAC5B,kBAAC,EAAD,CAAOA,UAAWD,KAAKC,kB,GAhBpB6D,IAAMC,WAsBzBgF,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.30831edf.chunk.js","sourcesContent":["const EventType = {\r\n    DATA: 0,\r\n    SOCKET_STATUS: 1,\r\n};\r\n\r\nexport default class WebsocketManager {\r\n    constructor() {\r\n        this.websocket = null;\r\n        this.data_callbacks = new Set();\r\n        this.status_callbacks = new Set();\r\n        this.EventType = EventType;\r\n\r\n        this.buffer = [];\r\n        this.sendBuffer()\r\n    }\r\n\r\n    sendBuffer() {\r\n        let bufferedPacket = this.buffer.shift();\r\n        if (bufferedPacket === undefined) {\r\n            setTimeout(() => this.sendBuffer(), 10);\r\n            return;\r\n        }\r\n        let data = bufferedPacket.data;\r\n        let buffer = new Uint8Array(data);\r\n        this.websocket.send(buffer);\r\n        setTimeout(() => this.sendBuffer(), bufferedPacket.wait);\r\n    }\r\n\r\n    notifyOnStatus(status) {\r\n        console.log(\"Websocket status: \" + status);\r\n        for (let cb of this.status_callbacks) {\r\n            cb(status);\r\n        }\r\n    }\r\n\r\n    notifyOnData(event) {\r\n        let buffer = event.data;\r\n        let data = new Uint8Array(buffer);\r\n        console.log(\"Recieved: \" + data);\r\n        for (let cb of this.data_callbacks) {\r\n            if (cb(data)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    open(url) {\r\n        this.close();\r\n        console.log(\"Opening websocket @ \" + url);\r\n        this.websocket = new WebSocket(url);\r\n        this.websocket.binaryType = \"arraybuffer\";\r\n        this.websocket.onopen = (ev) => this.notifyOnStatus(true);\r\n        this.websocket.onclose = (ev) => this.notifyOnStatus(false);\r\n        this.websocket.onmessage = (ev) => this.notifyOnData(ev);\r\n    }\r\n\r\n    close() {\r\n        if (this.isActive()) {\r\n            this.websocket.close();\r\n        }\r\n        this.websocket = null;\r\n    }\r\n\r\n    isActive() {\r\n        if (this.websocket === null) {\r\n            return false;\r\n        }\r\n        if (this.websocket.readyState !== WebSocket.OPEN) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    send(data, wait=10) {\r\n        if (this.isActive()) {\r\n            let packet = {\r\n                data: data,\r\n                wait: wait\r\n            };\r\n            this.buffer.push(packet);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCallbackList(event_type) {\r\n        switch (event_type) {\r\n        case WebsocketManager.EventType.DATA: \r\n            return this.data_callbacks;\r\n        case WebsocketManager.EventType.SOCKET_STATUS: \r\n            return this.status_callbacks;\r\n        default:\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    listen(callback, event_type) {\r\n        let callbacks = this.getCallbackList(event_type);\r\n        if (callbacks !== undefined) {\r\n            callbacks.add(callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    unlisten(callback, event_type) {\r\n        let callbacks = this.getCallbackList(event_type);\r\n        if (callbacks !== undefined) {\r\n            return callbacks.delete(callback);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static get EventType() {\r\n        return EventType;\r\n    }\r\n};\r\n","import WebsocketManager from \"../WebsocketManager.jsx\";\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nexport default class LedController extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.callbacks = [\r\n            [this.dataListener.bind(this), WebsocketManager.EventType.DATA],\r\n            [this.statusListener.bind(this), WebsocketManager.EventType.SOCKET_STATUS]\r\n        ];\r\n\r\n        this.callbacks.map((value) => {\r\n            this.props.websocket.listen(value[0], value[1]);\r\n        });\r\n\r\n        this.state = {\r\n            leds: []\r\n        };\r\n\r\n        if (this.props.websocket.isActive()) {\r\n            this.getInfo();\r\n        }\r\n    }   \r\n\r\n    componentWillUnmount() {\r\n        this.callbacks.map((value) => {\r\n            this.props.websocket.unlisten(value[0], value[1]);\r\n        });\r\n    }\r\n\r\n    dataListener(data) {\r\n        if (data.length < 2 || data[0] !== 0x01) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"Getting data\");\r\n\r\n        let command_type = data[1];\r\n        if (command_type === 0x02 && data.length >= 3) {\r\n            this.onInfo(data);    \r\n        } else if (command_type === 0x01) {\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    set leds(leds) {\r\n        let changes = [];\r\n        for (let i = 0; i < leds.length; i++) {\r\n            let newValue = leds[i] & 0xFF;\r\n            let oldValue = this.state.leds[i] & 0xFF;\r\n            if (newValue !== oldValue) {\r\n                changes.push(i);\r\n                changes.push(newValue);\r\n            }\r\n        }\r\n        if (changes.length === 0) {\r\n            return;\r\n        }\r\n        let packet = [0x01, 0x01, ...changes];\r\n        this.props.websocket.send(packet);\r\n        this.setState({...this.state, leds: leds});\r\n    }\r\n\r\n    get leds() {\r\n        return this.state.leds;\r\n    }\r\n\r\n    statusListener(status) {\r\n        if (status) {\r\n            this.getInfo();\r\n        }\r\n    }\r\n\r\n\r\n    onInfo(data) {\r\n        let total_leds = data[2];\r\n        if (total_leds !== data.length-3) {\r\n            console.warn(\"Incorrect match between data length and total leds\");\r\n            return;\r\n        }\r\n\r\n        let leds = [];\r\n        for (let i = 0; i < total_leds; i++) {\r\n            leds.push(data[i+3]);\r\n        }\r\n        this.setState({...this.state, leds: leds});\r\n    }\r\n\r\n    getInfo() {\r\n        this.props.websocket.send([0x01, 0x02]);\r\n    }\r\n}","import LedController from \"./LedController.jsx\";\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nexport default class Slider extends LedController {\r\n    constructor(props) {\r\n        super(props);\r\n    }   \r\n\r\n    onLedChange(index, event) {\r\n        let value = event.target.value;\r\n        let leds = [...this.leds];\r\n        leds[index] = value;\r\n        this.leds = leds;\r\n    }\r\n\r\n    createSlider(value, index) {\r\n       return <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <input  className=\"custom-range mr-2 w-90\" type=\"range\"\r\n                    min=\"0\" max=\"128\" step=\"1\"\r\n                    value={value} \r\n                    onChange={(ev) => this.onLedChange(index, ev)}></input>\r\n            <span className=\"badge badge-primary badge-pill\">{value}</span>\r\n       </li>;\r\n    }\r\n\r\n    render() {\r\n        const totalColumns = 2;\r\n        let rows = [];\r\n        for (let i = 0; this.leds && i < this.leds.length; i += totalColumns) {\r\n            let cols = [];\r\n            for (let col = 0; col < totalColumns; col++) {\r\n                let index = i+col;\r\n                if (index < this.leds.length) {\r\n                    let value = this.leds[index];\r\n                    cols.push(<div className=\"col\" key={index}>{this.createSlider(value, index)}</div>);\r\n                }\r\n            }\r\n            rows.push(<div className=\"row\" key={rows.length}>{cols}</div>);\r\n        }\r\n        return <div className=\"container-fluid\">{rows}</div>;\r\n    }\r\n}","import LedController from \"./LedController.jsx\";\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nconst Direction = {\r\n    FALLING: 0, \r\n    RISING: 1\r\n};\r\n\r\nexport default class Fader extends LedController {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fadeValues: [],\r\n            fadeDirection: []\r\n        };\r\n    }   \r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.updateLeds(), 33);\r\n    }\r\n\r\n    updateLeds() {\r\n        if (this.leds === undefined) {\r\n            return;\r\n        }\r\n        let leds = [...this.leds];\r\n        for (let i = 0; i < leds.length; i++) {\r\n            let direction = this.state.fadeDirection[i];\r\n            let rate = this.state.fadeValues[i];\r\n            switch (direction) {\r\n            case Direction.RISING:\r\n                leds[i] += rate;\r\n                if (leds[i] >= 128) {\r\n                    leds[i] = 128;\r\n                    this.state.fadeDirection[i] = Direction.FALLING;\r\n                }\r\n                break;\r\n            case Direction.FALLING:\r\n                leds[i] -= rate;\r\n                if (leds[i] <= 0) {\r\n                    leds[i] = 0;\r\n                    this.state.fadeDirection[i] = Direction.RISING;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.leds = leds;\r\n    }\r\n\r\n    onInfo(data) {\r\n        super.onInfo(data);\r\n        if (this.leds.length === this.state.fadeValues.length) {\r\n            return;\r\n        }\r\n        let fadeValues = this.leds.map(() => 0);\r\n        let fadeDirection = this.leds.map(() => Direction.RISING);\r\n        this.setState({...this.state, fadeValues: fadeValues, fadeDirection: fadeDirection});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onFadeChange(index, event) {\r\n        let value = Number(event.target.value);\r\n        let fadeValues = [...this.state.fadeValues];\r\n        fadeValues[index] = value;\r\n        this.setState({...this.state, fadeValues: fadeValues});\r\n    }\r\n\r\n    createSlider(value, index) {\r\n       return <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <input  className=\"custom-range mr-2 w-90\" type=\"range\"\r\n                    min=\"0\" max=\"20\" step=\"1\"\r\n                    value={value} \r\n                    onChange={(ev) => this.onFadeChange(index, ev)}></input>\r\n            <span className=\"badge badge-primary badge-pill\">{value}</span>\r\n       </li>;\r\n    }\r\n\r\n    render() {\r\n        let totalColumns = 2;\r\n        let rows = [];\r\n        let values = this.state.fadeValues;\r\n        for (let i = 0; i < values.length; i += totalColumns) {\r\n            let cols = [];\r\n            for (let col = 0; col < totalColumns; col++) {\r\n                let index = i + col;\r\n                if (index < values.length) {\r\n                    let value = values[index];\r\n                    cols.push(<div className=\"col\" key={index}>{this.createSlider(value, index)}</div>);\r\n                }\r\n            }\r\n            rows.push(<div className=\"row\" key={rows.length}>{cols}</div>);\r\n        }\r\n        return <div className=\"container-fluid\">{rows}</div>;\r\n    }\r\n}","import WebsocketManager from \"../WebsocketManager.jsx\";\r\n\r\nimport Slider from \"./Slider.jsx\";\r\nimport Fader from \"./Fader.jsx\";\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nconst Controllers = {\r\n    \"Slider\": Slider, \r\n    \"Fader\": Fader\r\n};\r\n\r\nexport default class LedManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllers = Controllers;\r\n        this.state = {\r\n            leds: [],\r\n            controller: \"Slider\"\r\n        };\r\n    }   \r\n\r\n    setController(controller) {\r\n        this.setState({...this.state, controller: controller});\r\n    }\r\n\r\n    getControllerComponent(props) {\r\n        let Controller = Controllers[this.state.controller];\r\n        return <Controller {...props}></Controller>;\r\n    }\r\n\r\n    renderControllers() {\r\n        return Object.keys(this.controllers).map((value, index) => {\r\n            return <a key={index} className=\"dropdown-item\" onClick={() => this.setController(value)}>{value}</a>;\r\n        })\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-mid-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n            <h3>LED Controls</h3>\r\n            <div className=\"btn-toolbar mb-2 mb-md-0 dropdown\">\r\n                <button className=\"btn btn-sm btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\">{this.state.controller}</button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                    {this.renderControllers()} \r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {this.renderHeader()}\r\n            {this.getControllerComponent({\r\n                websocket: this.props.websocket})}\r\n        </div>);\r\n    }\r\n}","import WebsocketManager from \"./WebsocketManager.jsx\";\r\n\r\nimport React from \"react\";\r\n\r\nexport default class PowerButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.websocket.listen(this.dataListener.bind(this), WebsocketManager.EventType.DATA);\r\n        this.props.websocket.listen(this.getInfo.bind(this), WebsocketManager.EventType.SOCKET_STATUS);\r\n        this.state = {\r\n            isPowered: false\r\n        };\r\n    }\r\n\r\n    turnOn() {\r\n        this.props.websocket.send([0x02, 0x02]);\r\n    }\r\n\r\n    turnOff() {\r\n        this.props.websocket.send([0x02, 0x01]);\r\n    }\r\n\r\n    reset() {\r\n        this.props.websocket.send([0x02, 0x03]);\r\n    }\r\n\r\n    dataListener(data) {\r\n        if (data.length < 3 || data[0] !== 0x02) {\r\n            return;\r\n        }\r\n        this.onInfo(data);\r\n        return true;\r\n    }\r\n\r\n    onInfo(data) {\r\n        let command = data[1];\r\n        let state = data[2];\r\n        switch (command) {\r\n        case 0x04:\r\n            this.setState({...this.state, isPowered: (state > 0)});       \r\n            break;\r\n        default: \r\n            console.warn(\"Unhandled pc io command: \" + command);\r\n            break;\r\n        }\r\n    }\r\n\r\n    getInfo(status) {\r\n        if (status) {\r\n            this.props.websocket.send([0x02, 0x04]);\r\n        }\r\n    }\r\n\r\n    renderPowerButton() {\r\n        let callback = this.state.isPowered ? (() => this.turnOff()) : (() => this.turnOn());\r\n        let className = this.state.isPowered ? \"btn-danger\" : \"btn-success\";\r\n        return (\r\n        <button type=\"button\" className={\"btn \"+className} onClick={callback}>\r\n            <i className=\"fa fa-power-off\"></i>\r\n        </button>); \r\n    }\r\n\r\n    renderResetButton() {\r\n        return (\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.reset()}>\r\n            <i className=\"fa fa-redo\"></i>\r\n        </button>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"navbar-nav col\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n                {this.renderPowerButton()}\r\n                {this.renderResetButton()}\r\n           </div>\r\n        </div>);\r\n    }\r\n}","import WebsocketManager from \"./WebsocketManager.jsx\";\r\n\r\nimport React from \"react\";\r\n\r\nconst temperatureMapping = [\r\n    \"temperature-low\",\r\n    \"thermometer-quarter\",\r\n    \"thermometer-half\",\r\n    \"thermometer-three-quarters\",\r\n    \"temperature-high\"\r\n];\r\n\r\nexport default class DHT11 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.websocket.listen(this.dataListener.bind(this), WebsocketManager.EventType.DATA);\r\n        this.props.websocket.listen((status) => {\r\n            if (status) this.getInfo();\r\n        }, WebsocketManager.EventType.SOCKET_STATUS);\r\n\r\n        this.state = {\r\n            temperature: 0,\r\n            humidity: 0\r\n        };\r\n    }   \r\n\r\n    dataListener(data) {\r\n        if (data.length < 3 || data[0] !== 0x03) {\r\n            return;\r\n        }\r\n        this.onInfo(data);\r\n        return true;\r\n    }\r\n\r\n    onInfo(data) {\r\n        let humidity = data[1];\r\n        let temperature = data[2];\r\n        this.setState({...this.state, humidity: humidity, temperature: temperature});\r\n    }\r\n\r\n    getInfo() {\r\n        this.props.websocket.send([0x03], 300);\r\n    }\r\n\r\n    renderBar(icon, text, background, fontSize, barSize, width) {\r\n        let fontStyle = {fontSize: fontSize+\"em\"};\r\n        let barStyle = {height: barSize+\"em\"};\r\n\r\n        return (\r\n        <div className=\"progress\" style={barStyle}>\r\n            <div className={\"progress-bar \"+background} role=\"progressbar\" style={{width: width+\"%\"}}>\r\n                <div className=\"d-flex d-inline justify-content-center align-items-center\">\r\n                    <i className={\"fa fa-\"+icon} style={fontStyle}></i>\r\n                    <div className=\"ml-3 text\" style={fontStyle}>{text}</div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    renderTemperature() {\r\n        let width = this.state.temperature / 50 * 100;\r\n        // map from 10'C to 50'C\r\n        // map as   0    to 4\r\n        // index = (temp-10)/10 \r\n        let index = (this.state.temperature-10)/10;\r\n        index = Math.round(index);\r\n        index = Math.min(index, temperatureMapping.length-1);\r\n        index = Math.max(index, 0);\r\n        let icon = temperatureMapping[index];\r\n\r\n        let fontSize = 2.5;\r\n        let barSize = fontSize + 1;\r\n        let text = this.state.temperature+\"\\u00B0C\";\r\n\r\n        return this.renderBar(icon, text, \"bg-danger\", fontSize, barSize, width);\r\n    }\r\n\r\n    renderHumidity() {\r\n        let width = this.state.humidity;\r\n        let icon = \"tint\";\r\n        let fontSize = 2.5;\r\n        let barSize = fontSize + 1;\r\n        let text = this.state.humidity+\"%\";\r\n\r\n        return this.renderBar(icon, text, \"bg-primary\", fontSize, barSize, width);\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-mid-nowrap align-items-center border-bottom pb-2 mt-3 mb-3\">\r\n                <h3>DHT11</h3>\r\n                <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => this.getInfo()}>Refresh</button>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">{this.renderTemperature()}</div>\r\n                    <div className=\"col\">{this.renderHumidity()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport WebsocketManager from './WebsocketManager.jsx';\r\n\r\nexport default class ConnectionManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.websocket.listen(this.setStatus.bind(this), WebsocketManager.EventType.SOCKET_STATUS);\r\n        this.state = {\r\n            isConnected: false,\r\n            url: \"192.168.1.109:80/api/v1/websocket\"\r\n            // url: window.location.hostname+\":80/api/v1/websocket\"\r\n        };\r\n        setTimeout(() => this.open(), 0);\r\n    }\r\n\r\n    open() {\r\n        this.props.websocket.open(\"ws://\"+this.state.url);\r\n    }\r\n\r\n    close() {\r\n        this.props.websocket.close();\r\n    }\r\n\r\n    setStatus(status) {\r\n        this.setState({...this.state, isConnected: status});\r\n    }\r\n\r\n    onURLChange(event) {\r\n        let url = event.target.value;\r\n        this.setState({...this.state, url: url});\r\n    }\r\n\r\n    renderURL() {\r\n        return (\r\n        <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">ws://</span>\r\n            </div>\r\n            <input className=\"form-control form-control-light\" \r\n                value={this.state.url}\r\n                onChange={this.onURLChange.bind(this)}\r\n                onKeyDown={(ev) => {\r\n                    if (ev.key === \"Enter\") {\r\n                        this.open();\r\n                    }\r\n                }}\r\n                type=\"text\" aria-label=\"URL\"></input>\r\n            {this.renderControls()}\r\n        </div>);\r\n    }\r\n\r\n    renderControls() {\r\n        let className = this.state.isConnected ? \"btn-danger\" : \"btn-success\";\r\n        let callback  = this.state.isConnected ? () => this.close() : () => this.open(); \r\n        let icon = this.state.isConnected ? \"fa fa-unlink\" : \"fa fa-link\";\r\n        return (\r\n        <div className=\"input-group-append\">\r\n            <button type=\"button\" className={\"btn \"+className} onClick={callback}>\r\n                <i className={icon}></i>\r\n            </button>\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"flex-md-nowrap w-100\">\r\n            <div className=\"row\">\r\n                <div className=\"input-group col\">\r\n                    {this.renderURL()}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport WebsocketManager from './WebsocketManager.jsx';\r\nimport LedManager from \"./LEDController/LedManager.jsx\";\r\nimport PowerButtons from \"./PowerButtons.jsx\";\r\nimport DHT11 from \"./DHT11.jsx\";\r\nimport ConnectionManager from \"./ConnectionManager.jsx\";\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.websocket = new WebsocketManager();\r\n    }\r\n\r\n    render() {\r\n        return <main>\r\n            <nav className=\"navbar navbar-dark sticky-top bg-dark\">\r\n                <div className=\"container flex-md-nowrap\">\r\n                    <PowerButtons websocket={this.websocket}></PowerButtons>\r\n                    <ConnectionManager websocket={this.websocket}></ConnectionManager>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container mt-2\">\r\n                <LedManager websocket={this.websocket}></LedManager>\r\n                <DHT11 websocket={this.websocket}></DHT11>\r\n            </div>\r\n        </main>;\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Main/>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}